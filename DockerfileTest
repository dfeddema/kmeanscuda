# mlcc -i RHEL7.5,CUDA9.2,Python3,Keras,TensorFlow
# mlcc version: 20180616a: Jun 16 2018

FROM  docker.io/nvidia/cuda:8.0-cudnn7-runtime-centos7 

# diane added the following line
USER root

COPY MLCC_Repos/RHEL7.5/ /etc/yum.repos.d/ 
 
RUN echo -e '#!/bin/bash \nset -vx \nfor (( TRY=1; TRY<=11; TRY++ )); do \n    yum -y -v install $@ \n    result=$? \n    for PKG in $@ ; do \n        yum list installed | grep "^$PKG" \n        (( result += $? )) \n    done \n    if (( $result == 0 )); then \n        /bin/rm -rf /var/cache/yum \n        /bin/rm -rf /var/cache/dnf \n        exit 0 \n    fi \n    sleep 10 \ndone \nexit 1 \n' >> /tmp/yum_install.sh; chmod +x /tmp/yum_install.sh; /tmp/yum_install.sh bzip2 findutils gcc gcc-c++ gcc-gfortran git gzip make patch pciutils unzip vim-enhanced wget xz zip; cd /tmp && wget "https://cmake.org/files/v3.11/cmake-3.11.3.tar.gz" && tar -xf cmake*.gz; cd /tmp/cmake-3.11.3 && ./bootstrap && make -j`getconf _NPROCESSORS_ONLN` && make install; cd /tmp && /bin/rm -rf /tmp/cmake*; cmake --version

COPY tensorflow-1.9.0-cp36-cp36m-linux_x86_64.whl /root/

COPY cudnn-9.2-linux-x64-v7.3.1.20.tgz /usr/local/ 

RUN tar -xvzf /usr/local/cudnn-9.2-linux-x64-v7.3.1.20.tgz

RUN cd /usr/local && /bin/rm -rf lib64 && ln -s lib lib64; if [ -x /usr/bin/python3 ]; then /tmp/yum_install.sh python3-pip python3-devel python3-setuptools; cd /usr/bin && ln -s python3 python && ln -s pip3 pip; else /tmp/yum_install.sh bzip2-devel libdb4-devel expat-devel gdbm-devel libpcap-devel ncurses-devel openssl-devel readline-devel sqlite-devel tk-devel xz-devel zlib-devel; cd /tmp && wget "https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tar.xz" && tar -xf Python*.xz; cd /tmp/Python-3.6.5 && ./configure --enable-optimizations --enable-shared --prefix=/usr/local --with-ensurepip=install LDFLAGS="-Wl,-rpath /usr/local/lib" && make -j`getconf _NPROCESSORS_ONLN` && make install; cp -a /usr/local/include/python* /usr/include/; cd /usr/local/bin && ln -s python3.6 python && ln -s pip3.6 pip; fi; cd /var/cache && /bin/rm -rf dnf yum; pip -v install --upgrade pip setuptools;

RUN pip install /root/tensorflow-1.9.0-cp36-cp36m-linux_x86_64.whl
RUN pip -v install numpy 
RUN python -c 'import numpy as np'

RUN pip -v install tensorflow
RUN python -c 'import tensorflow as tf'

RUN mkdir -p /root/diane/matrixmult_CPU_GPU;

RUN pip list installed

RUN pip install libKMCUDA

COPY matrixmult_CPU_GPU/  /root/diane/

#CMD  python /root/diane/matrixmult.py gpu 30000 
#RUN  python /root/diane/matrixmult.py gpu 30000 
 

EXPOSE 6006 

