Mon Feb 25 22:22:39 UTC 2019
Sending build context to Docker daemon 1.406 GB
Step 1/28 : FROM registry.access.redhat.com/rhel7.5
 ---> 7b875638cfd8
Step 2/28 : COPY MLCC_Repos/RHEL7.5/ /etc/yum.repos.d/
 ---> Using cache
 ---> ea8abe8f1942
Step 3/28 : RUN yum -y -v -t install "https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"; yum clean all; yum -y update; cd /var/cache && /bin/rm -rf dnf yum
 ---> Using cache
 ---> 5c32f9459e55
Step 4/28 : RUN echo -e '#!/bin/bash \nset -vx \nfor (( TRY=1; TRY<=11; TRY++ )); do \n    yum -y -v install $@ \n    result=$? \n    for PKG in $@ ; do \n        yum list installed | grep "^$PKG" \n        (( result += $? )) \n    done \n    if (( $result == 0 )); then \n        /bin/rm -rf /var/cache/yum \n        /bin/rm -rf /var/cache/dnf \n        exit 0 \n    fi \n    sleep 10 \ndone \nexit 1 \n' >> /tmp/yum_install.sh; chmod +x /tmp/yum_install.sh; /tmp/yum_install.sh bzip2 findutils gcc gcc-c++ gcc-gfortran git gzip make patch pciutils unzip vim-enhanced wget xz zip; cd /tmp && wget "https://cmake.org/files/v3.11/cmake-3.11.3.tar.gz" && tar -xf cmake*.gz; cd /tmp/cmake-3.11.3 && ./bootstrap && make -j`getconf _NPROCESSORS_ONLN` && make install; cd /tmp && /bin/rm -rf /tmp/cmake*; cmake --version
 ---> Using cache
 ---> 544671ba0981
Step 5/28 : COPY MLCC_Repos/NVIDIA_PKGS/cudnn-8.0-linux-x64*.tgz MLCC_Repos/NVIDIA_PKGS/nccl*cuda8.0_x86_64.txz /tmp/
 ---> Using cache
 ---> 2df5f9a3e8bd
Step 6/28 : RUN echo -e 'exec > /etc/yum.repos.d/cuda.repo \necho [cuda] \necho name=cuda \nif [ -f /etc/fedora-release ]; then \necho baseurl="http://developer.download.nvidia.com/compute/cuda/repos/fedora27/x86_64" \nelse \necho baseurl="http://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64" \nfi \necho enabled=1 \necho gpgcheck=0 \n' >> /tmp/Make_CUDA_Repo.sh; sh /tmp/Make_CUDA_Repo.sh; /tmp/yum_install.sh cuda-8-0; cd /tmp && tar -xvf cudnn*.tgz; cd /tmp/cuda && mv include/cudnn.h /usr/local/cuda/include && mv lib64/lib* /usr/local/cuda/lib64; cd /tmp && /bin/rm -rf /tmp/cud*; cd /tmp && tar -xvf nccl*.txz; cd /tmp/nccl*x86_64 && mv NCCL-SLA.txt /usr/local/cuda && mv include/nccl.h /usr/local/cuda/include && mv lib/lib* /usr/local/cuda/lib64; mkdir -p /usr/local/nccl && cd /usr/local/nccl && ln -s /usr/local/cuda/NCCL-SLA.txt NCCL-SLA.txt && ln -s /usr/local/cuda/include include && ln -s /usr/local/cuda/lib64 lib; cd /tmp && /bin/rm -rf /tmp/nccl*; ldconfig; echo -e '\nexport CUDA_HOME=/usr/local/cuda \nexport CUDA_PATH=/usr/local/cuda \nexport PATH=/usr/local/cuda/bin:/usr/local/bin:/usr/bin:${PATH} \nexport LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/lib:$LD_LIBRARY_PATH \n\n' >> ~/.bashrc;
 ---> Using cache
 ---> f5b0e48119b0
Step 7/28 : ENV CUDA_VERSION "8.0" CUDA_HOME "/usr/local/cuda" CUDA_PATH "/usr/local/cuda" CUDNN_VERSION "7.1" NCCL_VERSION "2.2.12" PATH "/usr/local/cuda/bin:/usr/local/bin:/usr/bin:${PATH:+:${PATH}}" LD_LIBRARY_PATH "/usr/local/cuda/lib64:/usr/local/lib:${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
 ---> Using cache
 ---> 3efc0c8f4a12
Step 8/28 : RUN cd /usr/local && /bin/rm -rf lib64 && ln -s lib lib64; if [ -x /usr/bin/python3 ]; then /tmp/yum_install.sh python3-pip python3-devel python3-setuptools; cd /usr/bin && ln -s python3 python && ln -s pip3 pip; else /tmp/yum_install.sh bzip2-devel libdb4-devel expat-devel gdbm-devel libpcap-devel ncurses-devel openssl-devel readline-devel sqlite-devel tk-devel xz-devel zlib-devel; cd /tmp && wget "https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tar.xz" && tar -xf Python*.xz; cd /tmp/Python-3.6.5 && ./configure --enable-optimizations --enable-shared --prefix=/usr/local --with-ensurepip=install LDFLAGS="-Wl,-rpath /usr/local/lib" && make -j`getconf _NPROCESSORS_ONLN` && make install; cp -a /usr/local/include/python* /usr/include/; cd /usr/local/bin && ln -s python3.6 python && ln -s pip3.6 pip; fi; cd /var/cache && /bin/rm -rf dnf yum; pip -v install --upgrade pip setuptools;
 ---> Using cache
 ---> a2fccabba96f
Step 9/28 : RUN yum-config-manager --enable rhel-server-rhscl-7-rpms
 ---> Using cache
 ---> 048562b2106b
Step 10/28 : RUN yum -y -v -t  install devtoolset-3
 ---> Using cache
 ---> 4a85ef98cb1c
Step 11/28 : RUN source "/opt/rh/devtoolset-3/enable" /bin/bash
 ---> Using cache
 ---> 184ff4726d17
Step 12/28 : RUN gcc --version
 ---> Using cache
 ---> cbee8eb124a8
Step 13/28 : RUN pip -v install scikit-learn
 ---> Using cache
 ---> a43063d81509
Step 14/28 : RUN pip -v install matplotlib
 ---> Using cache
 ---> f3e5d451d3af
Step 15/28 : RUN pip -v install pycuda
 ---> Using cache
 ---> be3395f41e4e
Step 16/28 : RUN mkdir -p /root/diane/kmeancuda;
 ---> Using cache
 ---> 0a6469a22fcc
Step 17/28 : COPY pythontest.py /root/diane/kmeancuda/
 ---> Using cache
 ---> 74d3e29641ed
Step 18/28 : RUN pip list installed
 ---> Using cache
 ---> 2ee65134514a
Step 19/28 : ENV CUDA_TOOLKIT_ROOT_DIR /usr/local/cuda-8.0
 ---> Using cache
 ---> 41b00c92e8d6
Step 20/28 : RUN echo -e '#!/bin/bash source "/opt/rh/devtoolset-3/enable"; CUDA_ARCH=60 pip install libKMCUDA; pip install libKMCUDA; pip list isntalled \n'
 ---> Using cache
 ---> f673274d0714
Step 21/28 : RUN CUDA_ARCH=60 pip install libKMCUDA
 ---> Running in 450a54d9edeb

[91m[0mCollecting libKMCUDA
  Downloading https://files.pythonhosted.org/packages/ff/1f/0cf14b8b3e1ec418ab7c4b2fa65c43591a52d27de39b2e976f063554c6a2/libKMCUDA-6.2.2.tar.gz
Requirement already satisfied: numpy in /usr/local/lib/python3.6/site-packages (from libKMCUDA) (1.16.1)
Installing collected packages: libKMCUDA
  Running setup.py install for libKMCUDA: started
    Running setup.py install for libKMCUDA: finished with status 'error'
    Complete output from command /usr/local/bin/python3.6 -u -c "import setuptools, tokenize;__file__='/tmp/pip-install-m498j955/libKMCUDA/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" install --record /tmp/pip-record-qeh0h9y5/install-record.txt --single-version-externally-managed --compile:
    running install
    running build
    running build_py
    CMake Error: The source directory "/tmp/pip-install-m498j955/libKMCUDA" does not appear to contain CMakeLists.txt.
    Specify --help for usage, or press the help button on the CMake GUI.
    Traceback (most recent call last):
      File "<string>", line 1, in <module>
      File "/tmp/pip-install-m498j955/libKMCUDA/setup.py", line 83, in <module>
        "Programming Language :: Python :: 3.6",
      File "/usr/local/lib/python3.6/site-packages/setuptools/__init__.py", line 145, in setup
        return distutils.core.setup(**attrs)
      File "/usr/local/lib/python3.6/distutils/core.py", line 148, in setup
        dist.run_commands()
      File "/usr/local/lib/python3.6/distutils/dist.py", line 955, in run_commands
        self.run_command(cmd)
      File "/usr/local/lib/python3.6/distutils/dist.py", line 974, in run_command
        cmd_obj.run()
      File "/usr/local/lib/python3.6/site-packages/setuptools/command/install.py", line 61, in run
        return orig.install.run(self)
      File "/usr/local/lib/python3.6/distutils/command/install.py", line 545, in run
        self.run_command('build')
      File "/usr/local/lib/python3.6/distutils/cmd.py", line 313, in run_command
        self.distribution.run_command(command)
      File "/usr/local/lib/python3.6/distutils/dist.py", line 974, in run_command
        cmd_obj.run()
      File "/usr/local/lib/python3.6/distutils/command/build.py", line 135, in run
        self.run_command(cmd_name)
      File "/usr/local/lib/python3.6/distutils/cmd.py", line 313, in run_command
        self.distribution.run_command(command)
      File "/usr/local/lib/python3.6/distutils/dist.py", line 974, in run_command
        cmd_obj.run()
      File "/tmp/pip-install-m498j955/libKMCUDA/setup.py", line 19, in run
        self._build()
      File "/tmp/pip-install-m498j955/libKMCUDA/setup.py", line 37, in _build
        "."))
      File "/usr/local/lib/python3.6/subprocess.py", line 291, in check_call
        raise CalledProcessError(retcode, cmd)
    subprocess.CalledProcessError: Command '('cmake', '-DCMAKE_BUILD_TYPE=Release', '-DDISABLE_R=y', '-DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0', '-DCUDA_ARCH=60', '.')' returned non-zero exit status 1.
    
    ----------------------------------------
[91mCommand "/usr/local/bin/python3.6 -u -c "import setuptools, tokenize;__file__='/tmp/pip-install-m498j955/libKMCUDA/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" install --record /tmp/pip-record-qeh0h9y5/install-record.txt --single-version-externally-managed --compile" failed with error code 1 in /tmp/pip-install-m498j955/libKMCUDA/
[0mThe command '/bin/sh -c CUDA_ARCH=60 pip install libKMCUDA' returned a non-zero code: 1
Mon Feb 25 22:22:47 UTC 2019
